'use strict';

var parseNumber = function (s) { return parseInt(s, 10); };

function processInput() {
    var lines = input.split("\n");
    var L = parseNumber(lines[0]).toString(2).split('')
        .map(function(c) { return c=='0' ? 0 : 1; });
    var R = parseNumber(lines[1]).toString(2).split('')
        .map(function(c) { return c=='0' ? 0 : 1; });
    var diff = R.length - L.length;
    while (diff) { L.unshift(0); diff--; }
    var l = 0;;
    R.every(function(d, i) { l = i;
                             return  L[i] === d;
                           });
    R.slice(l+1).forEach(function(r,i) {
        var index = i+l+1;
        R[index] &= 0;
        L[index] |= 1;
    });
    console.log(parseInt(R.join(''),2) ^ parseInt(L.join(''),2));
} 
'use strict';


function processData2() {
    var parse_fun = function (s) { return parseInt(s, 10); };

    var lines = input.split('\n');
    var L = parse_fun(lines.shift());
    var R = parse_fun(lines.shift());

    var res = 0;
    for (var i = L; i <= R; i++) {
    for (var j = L; j <= R; j++) {
        var xor = i ^ j;
        if (xor >= res) { res = xor; }
    }}

    console.log(res);
}


var input = '1\n100000';
console.log(input);
processInput();

var input = '1\n100000';
console.log(input);
processData2();
    

// var input = "";
// process.stdin.resume();
// process.stdin.setEncoding('ascii');
// process.stdin.on('data', function (data) {input += data;});
// process.stdin.on('end', processInput);
